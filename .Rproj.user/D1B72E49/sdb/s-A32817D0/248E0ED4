{
    "contents" : "---\ntitle: 'Reproducible Research: Peer Assessment 1'\noutput:\n  html_document:\n    keep_md: yes\n    Author: Amanda Molling\n    Date: APril 10, 2015\n---\n\n\n## Loading and preprocessing the data\n```{r, Echo = TRUE}\nfileURL <- \"http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\"\ndownload.file(fileURL, \"activityDataFile.zip\")\nunzip(\"activityDataFile.zip\")\nactivityData <- read.csv(\"activity.csv\")\nactivityData$date <- as.Date(activityData$date)\n\n\n```\n\n## What is mean total number of steps taken per day?\nI computed the mean, median, and sum data as follows:\n```{r, ECHO = TRUE}\ntotalDailySteps <- aggregate(steps ~ date, activityData, sum)\n\n#medDailySteps <- aggregate(steps ~ date, activityData, mean)\n\nhead(totalDailySteps)\n\nmean(totalDailySteps[, 2])\nmedian(totalDailySteps[,2])\n```\n\n## What is the average daily activity pattern?\n```{r, echo=TRUE}\nmeanDailyStepsByInterval <- aggregate(steps ~ interval, activityData, mean)\nlibrary('lattice')\nxyplot(steps ~ interval, meanDailyStepsByInterval, xlab = \"Interval\", ylab = \"Number of steps\", type = \"l\")\n```\nThe time interval with the most steps is found to be 835.\n```{r}\n\nwhich(meanDailyStepsByInterval == max(meanDailyStepsByInterval[2]), arr.ind = TRUE)\n```\nwhere the value is:\n\n```{r}\n\nmax(meanDailyStepsByInterval[,2])\n\n## And the specific interval is :\n\nmeanDailyStepsByInterval[104, 1]\n```\n## Imputing missing values\nFor the second part, I find the number of complete cases and build a table. Then, I can subtract the good cases from the total number of obs. Another way to do this is by simply calculating the number of bad cases as shown.\n\n```{r}\n##I make the good data first\ngood <-complete.cases(activityData)\n\ngoodData<-activityData[good,][,]\nnrow(goodData)\nnrow(activityData) - nrow(goodData)\n\n##That is the number of bad rows\n## The second method:\nbadData <- activityData[!good,][,]\nnrow(badData)\n```\n# Replacing Missing Data\n### To fill in the missing data, I use my mean data calcuated at each time interval from before:\n```{r}\nnewActivityData <- activityData\nfor (i in 1 : (nrow(activityData) )){\n  if (  is.na( activityData[ i , 1] ) ) {\n    newActivityData[ i , 1] <- meanDailyStepsByInterval[ ( ( i - 1 ) %% ( nrow(meanDailyStepsByInterval) ) + 1 ), 2]\n  }\n}\n```\n### As confirmation of my replacement, I have shown the front and back of each of the tables, where NA values dominate. \n\n```{r}\nhead(newActivityData)\ntail(newActivityData)\nhead(meanDailyStepsByInterval)\ntail(meanDailyStepsByInterval)\n```\n\n##The Histogram of the Data with Replaced Values:\n```{r}\ntotalDailySteps <- aggregate(steps ~ date, newActivityData, sum)\nhist(totalDailySteps[, 2], breaks = 20, xlab = \"Total Steps Each Day\", main = \"Histogram of Total Daily Steps Taken\")\n```\n\n## The mean and median of the data with artificially replaced  values are:\n```{r}\n\nmean(totalDailySteps[,2])\nmedian(totalDailySteps[,2])\n```\nBy looking the mean (107.66.19) and median (10765) from before, it can be seem that any change in the mean is not detectable. In addition, due to relative proximity of the median and mode, the change in the median was small and calculated to be less than 2 hundreths of a percent change:\n\n```{r, echo=TRUE}\npercentDifference <- 100 * (10766.19 - 10765)/(10765)\nprint(percentDifference)\n```\n# Looking at Weekends Vs. Weekdays:\n\n```{r, echo=TRUE}\nweekValue <- (weekdays(as.Date(newActivityData$date)))\nbig <- cbind(newActivityData, weekValue)\nbig$weekValue <- as.character(big$weekValue)\nfor (step in 1:nrow(newActivityData)){\n    if ( ( big[step, 4] == \"Sunday\" ) || ( big[step, 4] == \"Saturday\") ){\n      big[step, 4 ] <- \"Weekend\"\n    # print(\"Weekend\")\n      }\n    else {\n      big[step, 4] <- \"Weekday\"\n    }\n}\n  head(big)\nbigWeek <- subset(big, big$weekValue == \"Weekday\",)\nbigWeekAve <- aggregate(steps ~interval, bigWeek, mean)\nbigEnd <- subset(big, big$weekValue == \"Weekend\",)\nbigEndAve <- aggregate(steps ~interval, bigEnd, mean)\n##bigAverage <- aggregate(x = big, list(interval), FUN = mean)\n\n## Are there differences in activity patterns between weekdays and weekends?\npar(mfrow = c(2, 1))\n\nplot(bigWeekAve$interval, bigWeekAve$steps, type = \"l\", xlab = \"Interval\", ylab = \"Number of steps (average)\", main = \"Weekday\")\nplot(bigEndAve$interval, bigEndAve$steps, type = \"l\", xlab = \"Interval\", ylab = \"Number of steps (average)\", main = \"Weekend\")\n\n",
    "created" : 1428685008664.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1234882641",
    "id" : "248E0ED4",
    "lastKnownWriteTime" : 1428690591,
    "path" : "~/School Files/Open Courseware/Coursera/Reproducible Research/project1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}